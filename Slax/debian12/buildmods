#!/bin/bash
set -x
EMPTY=/tmp/slax-empty
UNION=/tmp/slax-union
SLAXMODSDIR=/tmp/slax-data-540/slax/

umount $UNION 2>/dev/null
rm -Rf $UNION
mkdir -p $UNION

umount $EMPTY 2>/dev/null
rm -Rf $EMPTY
mkdir -p $EMPTY

# change union target storage to $1
# work on union mount $2
#
union_target_set()
{
   rm -Rf "$1"
   mkdir -p "$1"
   mount -o remount,mod:$(cat /sys/fs/aufs/*/br0 | sed -r "s/=.*//")=ro none "$2" 2>/dev/null
   mount -o remount,add:0:"$1" none "$2"
}

union_remove()
{
   mount -o remount,del:0:"$1" none "$2"
}

# setup union
modprobe aufs
mount -t tmpfs tmpfs $EMPTY
mount -t aufs -o xino="$EMPTY/.xino",br="$EMPTY" none "$UNION"

for i in boot dev proc run sys tmp media mnt; do
   mkdir -p $UNION/$i
   mount --rbind /$i $UNION/$i
done

for i in $(ls -1 $SLAXMODSDIR | fgrep .sb); do
   mkdir -p /tmp/sb-mount-$i
   mount -o loop $SLAXMODSDIR/$i /tmp/sb-mount-$i
   mount -o remount,add:0:"/tmp/sb-mount-$i" none "$UNION"
done

# install all packages for bundles
for i in $(ls -1 modules | sort); do
   union_target_set /tmp/$i "$UNION"
   cp -a cleanup $UNION && chmod ugo+x $UNION/cleanup
   mkdir -p $UNION/a/
   cp -aR ./modules/$i $UNION/a
   chroot $UNION /a/$i/build
   chroot $UNION /cleanup
   rm -Rf $UNION/{a,cleanup}

   if [ "$(echo $i | fgrep -tmp)" != "" ]; then
      mount -o remount,del:/tmp/$i "$UNION"
   fi
done

# mark last branch read-only and add new branch in order to remove some .wh. files
union_target_set /tmp/empty2 "$UNION"
exit

umount "$UNION/*"
umount "$UNION"
umount "$EMPTY"
rmdir "$UNION"
rmdir "$EMPTY"

exit


# delete unneeded stuff
for i in $(ls -1 modules | sort); do
   ./reduce /tmp/$i
   rm /tmp/$i.sb
done

# remove duplicites
for i in $(ls -1 modules | sort); do
   for j in $(ls -1 modules | sort); do
      if [ "$i" \< "$j" ]; then
         remove_duplicites /tmp/$i /tmp/$j
      fi
   done
done

# make squashfs images
for i in $(ls -1 modules | sort); do
   mksquashfs /tmp/$i /tmp/$i.sb -comp xz -Xbcj x86 -b 1024k -always-use-fragments
done
